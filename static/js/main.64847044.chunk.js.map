{"version":3,"sources":["components/CustomerDelete.js","components/Customer.js","components/CustomerAdd.js","web.js","serviceWorker.js","index.js"],"names":["CustomerDelete","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleClickOpen","setState","open","handleClose","state","id","fetch","method","stateRefresh","_this2","react_default","a","createElement","Button","variant","color","onClick","Dialog","onClose","DialogTitle","DialogContent","Typography","gutterBottom","DialogActions","e","deleteCustomer","React","Component","Customer","TableRow","TableCell","src","image","alt","width","name","gender","job","components_CustomerDelete","CustomerAdd","handleFormSubmit","preventDefault","addCustomer","then","response","console","log","data","file","userName","fileName","handleFileChage","target","files","value","handleValueChange","nextState","formData","FormData","append","post","headers","content-type","classes","className","hidden","accept","type","onChange","htmlFor","component","TextField","label","withStyles","theme","display","App","customers","completed","searchKeyword","callApi","res","catch","err","asyncToGenerator","regenerator_default","mark","_callee","body","wrap","_context","prev","next","sent","json","abrupt","stop","progress","timer","setInterval","_this3","root","Container","AppBar","position","Toolbar","IconButton","edge","menuButton","aria-label","Menu_default","title","noWrap","search","searchIcon","Search_default","InputBase","placeholder","inputRoot","input","inputInput","inputProps","menu","components_CustomerAdd","Paper","paper","Table","table","TableHead","map","temp","tableHead","TableBody","filter","indexOf","components_Customer","key","_id","colSpan","align","CircularProgress","minWidth","marginLeft","marginRight","margin","spacing","unit","grow","flexGrow","fontSize","marginTop","marginBottom","justifyContent","defineProperty","breakpoints","up","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","height","pointerEvents","alignItems","padding","transition","transitions","create","&:focus","Boolean","window","location","hostname","match","createMuiTheme","typography","fontFamily","ReactDOM","render","MuiThemeProvider","web","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.64847044.chunk.js","sourcesContent":["import React from 'react';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport Button from '@material-ui/core/Button';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Typography from '@material-ui/core/Typography';\n\nclass CustomerDelete extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            open: false\n        }\n    }\n\n    handleClickOpen = () => {\n        this.setState({\n            open: true\n        });\n    }\n\n    handleClose = () => {\n        this.setState({\n            open: false\n        });\n    }\n\n    deleteCustomer(id){\n        const url = 'http://management.cafe24app.com/api/customers/' + id;\n        fetch(url, {\n            method: 'DELETE'\n        });\n        this.props.stateRefresh();\n    }\n\n    render(){\n        return (\n            <div>\n                <Button variant=\"contained\" color=\"secondary\" onClick={this.handleClickOpen}>삭제</Button>\n                <Dialog open={this.state.open} onClose={this.handleClose}>\n                    <DialogTitle onClose={this.handleClose}>\n                        삭제 경고\n                    </DialogTitle>\n                    <DialogContent>\n                        <Typography gutterBottom>\n                            선택한 고객 정보가 삭제됩니다.\n                        </Typography>                                    \n                    </DialogContent>\n                    <DialogActions>\n                        <Button variant=\"contained\" color=\"primary\" onClick={(e)=>{this.deleteCustomer(this.props.id)}}>삭제</Button>\n                        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default CustomerDelete;","import React from 'react';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport CustomerDelete from './CustomerDelete';\n\nclass Customer extends React.Component {\n    render(){\n        return ( \n            <TableRow>\n                <TableCell>{this.props.id}</TableCell>\n                <TableCell><img src={this.props.image} alt=\"profile\" width=\"64\"/></TableCell>\n                <TableCell>{this.props.name}</TableCell>\n                <TableCell>{this.props.gender}</TableCell>\n                <TableCell>{this.props.job}</TableCell>\n                <TableCell><CustomerDelete stateRefresh={this.props.stateRefresh} id={this.props.id} /></TableCell>\n            </TableRow>\n        );\n    }\n}\n\nexport default Customer;","import React from 'react';\nimport { post } from 'axios';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport { withStyles } from '@material-ui/core/styles';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst styles = theme => ({\n    hidden: {\n        display: 'none'\n    }\n})\n\nclass CustomerAdd extends React.Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            file: null,\n            userName: '',\n            gender: '',\n            job: '',\n            fileName: '',\n            open: false\n        }\n    }\n\n    handleFormSubmit = (e) => {\n        e.preventDefault();\n        this.addCustomer()\n        .then((response)=>{\n            console.log(response.data);\n            this.props.stateRefresh();\n        })\n        this.setState({\n            file: null,\n            userName: '',\n            gender: '',\n            job: '',\n            fileName: '',\n            open: false\n        })\n        \n    }\n\n    handleFileChage = (e) => {\n        this.setState({\n            file: e.target.files[0],\n            fileName: e.target.value\n        })\n    }\n\n    handleValueChange = (e) => {\n        let nextState = {};\n        nextState[e.target.name] = e.target.value;\n        this.setState(nextState);\n    }\n\n    addCustomer = () => {\n        const url = 'http://management.cafe24app.com/api/customers';\n        const formData = new FormData();\n\n        formData.append('image', this.state.file)\n        formData.append('name', this.state.userName)\n        formData.append('gender', this.state.gender)\n        formData.append('job', this.state.job)\n\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        }\n        return post(url, formData, config)\n    }\n\n    handleClickOpen = () => {\n        this.setState({\n            open: true\n        });\n    }\n\n    handleClose = () => {\n        this.setState({\n            file: null,\n            userName: '',\n            gender: '',\n            job: '',\n            fileName: '',\n            open: false\n        });\n    }\n\n    render(){\n        const { classes } = this.props;\n        return (\n            <div>\n                <Button variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>고객 추가하기</Button>\n                <Dialog open={this.state.open} onClose={this.handleClose}>\n                    <DialogTitle>고객 추가</DialogTitle>\n                    <DialogContent>\n                        <input className={classes.hidden} accept=\"image/*\" id=\"raised-button-file\" type=\"file\" file={this.state.file} value={this.state.fileName} onChange={this.handleFileChage} /><br />\n                        <label htmlFor=\"raised-button-file\">\n                            <Button variant=\"contained\" color=\"primary\" component=\"span\" name=\"file\">\n                                {this.state.fileName === \"\"? \"프로필 이미지 선택\" : this.state.fileName}\n                            </Button>\n                        </label>\n                        <br/>\n                        <TextField label=\"이름\" type=\"text\" name=\"userName\" value={this.state.userName} onChange={this.handleValueChange} /><br/>\n                        <TextField label=\"성별\" type=\"text\" name=\"gender\" value={this.state.gender} onChange={this.handleValueChange} /><br/>\n                        <TextField label=\"직업\" type=\"text\" name=\"job\" value={this.state.job} onChange={this.handleValueChange} /><br />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.handleFormSubmit}>추가</Button>\n                        <Button variant=\"outlined\" color=\"primary\" onClick={this.handleClose}>닫기</Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default withStyles(styles)(CustomerAdd);","import React,{ Component } from 'react';\nimport Customer from './components/Customer';\nimport CustomerAdd from './components/CustomerAdd';\nimport './App.css';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport InputBase from '@material-ui/core/InputBase';\nimport { fade } from '@material-ui/core/styles';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport Container from '@material-ui/core/Container';\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    minWidth: 1080,\n  },\n  paper: {\n    marginLeft: 18,\n    marginRight: 18\n  },\n  progress: {\n    margin: theme.spacing.unit*2\n  },\n  grow: {\n    flexGrow: 1\n  },\n  tableHead: {\n    fontSize: '1.0rem'\n  },\n  menu: {\n    marginTop: 15,\n    marginBottom: 15,\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: 'none',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  search: {\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: theme.spacing(1),\n      width: 'auto',\n    },\n  },\n  searchIcon: {\n    width: theme.spacing(7),\n    height: '100%',\n    position: 'absolute',\n    pointerEvents: 'none',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 7),\n    transition: theme.transitions.create('width'),\n    width: '100%',\n    [theme.breakpoints.up('sm')]: {\n      width: 120,\n      '&:focus': {\n        width: 200,\n      },\n    },\n  },\n});\n\n\nclass App extends Component{\n\n  constructor(props){\n    super(props);\n    this.state = {\n      customers: '',\n      completed: 0,\n      searchKeyword: ''\n    }\n  }\n\n  stateRefresh = () => {\n    this.setState({\n      customers: '',\n      completed: 0,\n      searchKeyword: ''\n    });\n    this.callApi().then(res => this.setState({ customers: res })).catch(err => console.log(err));\n  }\n\n  componentDidMount(){\n    this.timer = setInterval(this.progress, 20);\n    this.callApi().then(res => this.setState({ customers: res })).catch(err => console.log(err));\n  }\n\n  callApi = async () => {\n    const response = await fetch('http://management.cafe24app.com/api/customers');\n    const body = await response.json();\n    return body;\n  }\n\n  progress = () => {\n    const { completed } = this.state;\n    this.setState({ \n      completed: completed>=100? 0: (completed+1)\n    });\n  }\n\n  handleValueChange = (e) => {\n    let nextState = {};\n    nextState[e.target.name] = e.target.value;\n    this.setState(nextState);\n  }\n\n  render(){\n    const { classes } = this.props;\n    const cellList = [\"번호\",\"이미지\",\"이름\",\"성별\",\"직업\",\"설정\"];\n    const filteredComponents = (data) => {\n      data = data.filter((temp) => {\n        return temp.name.indexOf(this.state.searchKeyword)>-1;\n      });\n      return data.map( (temp) => {\n        return <Customer stateRefresh={this.stateRefresh} key={temp._id} id={temp._id} image={temp.image} name={temp.name} gender={temp.gender} job={temp.job} />\n      });\n    }\n    return (\n      <div className={classes.root}>\n        <Container>\n          <AppBar position=\"static\">\n            <Toolbar>\n              <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"Open drawer\">\n                <MenuIcon />\n              </IconButton>\n              <Typography className={classes.title} variant=\"h6\" noWrap>\n                고객 관리 시스템\n              </Typography>\n                <div className={classes.search}>\n                <div className={classes.searchIcon}>\n                  <SearchIcon />\n                </div>\n                <InputBase placeholder=\"검색하기\" classes={{root: classes.inputRoot,input: classes.inputInput,}} \n                inputProps={{ 'aria-label': 'Search' }} name=\"searchKeyword\" value={this.state.searchKeyword} onChange={this.handleValueChange}/>\n              </div>\n            </Toolbar>\n          </AppBar>\n          <div className={classes.menu}>\n            <CustomerAdd stateRefresh={this.stateRefresh}/>\n          </div>\n          <Paper className={classes.paper}>\n            <Table className={classes.table}>\n              <TableHead>\n                <TableRow>\n                  {cellList.map(temp => {\n                    return <TableCell className={classes.tableHead} >{temp}</TableCell>\n                  })}\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {this.state.customers ? filteredComponents(this.state.customers) : \n                  <TableRow>\n                    <TableCell colSpan=\"5\" align=\"center\">\n                      <CircularProgress className={classes.progress} variant=\"determinate\" value={this.state.completed} />\n                    </TableCell>\n                  </TableRow>\n                }\n              </TableBody>\n\n            </Table>\n          </Paper>\n        </Container>\n        \n      </div>\n    );\n  }\n}\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './web';\nimport * as serviceWorker from './serviceWorker';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    typography: {\n        fontFamily: '\"Noto Sans KR\", serif'\n    }\n})\n\nReactDOM.render(\n    <MuiThemeProvider theme={theme}>\n        <App />\n    </MuiThemeProvider>, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}